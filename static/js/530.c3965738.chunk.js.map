{"version":3,"file":"static/js/530.c3965738.chunk.js","mappings":"6OACA,GAAgB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,MAAQ,uB,4CC2FxH,EAtFe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgBN,EAASO,QAAQC,IAAI,SAE9D,GAAIH,EAAc,CAChB,IAAMI,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,IAAaL,GADvB,gBACRM,EADQ,EACRA,QAERZ,EAAUY,GACVd,EAAeQ,GAJC,2CAAH,qDAQfI,GACD,CACF,GAAE,CAACT,EAASO,SAEb,IAAMK,EAAY,mCAAG,WAAMC,GAAN,4EACnBA,EAAEC,kBAEElB,EAAYmB,OAHG,kCAISL,EAAAA,EAAAA,IAAad,GAJtB,gBAITe,EAJS,EAITA,QAERZ,EAAUY,GACVd,EAAe,IAEQ,IAAnBc,EAAQK,QACVC,EAAAA,GAAAA,MAAY,uEAGdf,GAAQ,kBACHF,GADE,IAELO,OAAO,SAAD,OAAWX,MAfF,4CAAH,sDAoBlB,OACE,iCACE,mBAAQsB,UAAWC,EAAAA,UAAnB,UACE,kBAAMD,UAAWC,EAAAA,KAAUC,SAAUR,EAArC,WACE,kBACES,SAAU,SAAAR,GAAC,OAAIhB,EAAegB,EAAES,OAAOC,MAA5B,EACXL,UAAWC,EAAAA,MACXK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZJ,MAAO3B,KAET,mBAAQ4B,KAAK,SAASN,UAAWC,EAAAA,OAAjC,gCAKJ,wBACCrB,EAAOkB,OAAS,GACflB,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,EAAcC,YAAd,OAEP,eAAaF,GAAIA,EAAjB,UACE,SAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,iBAAgBJ,IACxBK,MAAO,CACLC,KAAM,CACJnC,SAAAA,KALR,UAUE,uBAAI8B,OAXCD,EAFF,QAqBlB,C","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__5L7s0\",\"button\":\"Movies_button__q3Y5z\",\"btnLabel\":\"Movies_btnLabel__J-R+Q\",\"input\":\"Movies_input__N3yRL\"};","import { toast } from 'react-toastify';\nimport css from './Movies.module.css'\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from '../services/api';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieToFind, setMovieToFind] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useNavigate();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get('query');\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setMovieToFind(searchString);\n\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (movieToFind.trim()) {\n      const { results } = await searchMovies(movieToFind);\n\n      setMovies(results);\n      setMovieToFind('');\n\n      if (results.length === 0) {\n        toast.error('We did not found anything! Please change your request and try again');\n      }\n\n      history({\n        ...location,\n        search: `query=${movieToFind}`,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header className={css.searchbar}>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <input\n            onChange={e => setMovieToFind(e.target.value)}\n            className={css.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={movieToFind}\n          />\n          <button type=\"submit\" className={css.button}>\n          &#128269;\n          </button>\n        </form>\n      </header>\n      <ul>\n      {movies.length > 0 &&\n        movies.map(({ id, title, poster_path }) => (\n         \n            <li key={id} id={id}>\n              <Link\n                to={{\n                  pathname: `/movies/${`${id}`}`,\n                  state: {\n                    from: {\n                      location,\n                    },\n                  },\n                }}\n              >\n                <p>{title}</p>\n              </Link>\n            </li>\n          \n        ))}\n        </ul>\n    </>\n  );\n};\n\nexport default Movies;"],"names":["useState","movieToFind","setMovieToFind","movies","setMovies","location","useLocation","history","useNavigate","useEffect","searchString","URLSearchParams","search","get","getMovies","searchMovies","results","handleSubmit","e","preventDefault","trim","length","toast","className","css","onSubmit","onChange","target","value","type","autoComplete","autoFocus","placeholder","map","id","title","poster_path","to","pathname","state","from"],"sourceRoot":""}